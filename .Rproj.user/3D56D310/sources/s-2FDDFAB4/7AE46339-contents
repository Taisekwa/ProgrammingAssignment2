## Put comments here that give an overall description of what your
## functions do

## Write a short comment describing this function

#The first function, makeVector creates a special "vector", which is really a list containing a function to

# set the value of the vector
# get the value of the vector
# set the value of the mean
# get the value of the mean

makeVector <- function(x = numeric()) {
  m <- NULL
  set <- function(y) {
    x <<- y
    m <<- NULL
  }
  get <- function() x
  setmean <- function(mean) m <<- mean
  getmean <- function() m
  list(set = set, get = get,
       setmean = setmean,
       getmean = getmean)
}

# The following function calculates the mean of the special "vector" created with the above function. However, it first checks to see if the mean has already been calculated. If so, it gets the mean from the cache and skips the computation. Otherwise, it calculates the mean of the data and sets the value of the mean in the cache via the setmean function.

cachemean <- function(x, ...) {
  m <- x$getmean()
  if(!is.null(m)) {
    message("getting cached data")
    return(m)
  }
  data <- x$get()
  m <- mean(data, ...)
  x$setmean(m)
  m
}

# This function creates a special "matrix" object that can cache its inverse.
  makeCacheMatrix <- function(x = matrix()) {     
     inv <- NULL
     set <- function(y) {
        x <<- y
        inv <<- NULL
        }
  get <- function() x 
  setInverse <- function(inverse) inv <<- inverse
  getInverse <- function() inv
  list(set = set,
       get = get,
       setInverse = setInverse,
       getInverse = getInverse)
  }
  
  


## This function returns the inverse of the makeCacheMatrix above. 

cacheSolve <- function(x, ...) {
        ## Return a matrix that is the inverse of 'x'
         inv <- x$getInverse()
         if (!is.null(inv)) {
         message("getting cached data")
           return(inv)
         }
           mat <- x$get()
           inv <- solve(mat, ...)
          x$setInverse(inv)
         inv
}

#Testing the functions

#source("cachematrix.R")
 my_matrix <- makeCacheMatrix(matrix(1:4, 2, 2))
 my_matrix$get()
 
 my_matrix$getInverse()
 
  cacheSolve(my_matrix)
  my_matrix$getInverse()
  
  # doing another test

my_matrix$set(matrix(c(3, 3, 2, 5), 2, 2))
my_matrix$get()
my_matrix$getInverse()
cacheSolve(my_matrix)
my_matrix$getInverse()

print("This file was created within RStudio")

print("And now it lives on GitHub")

